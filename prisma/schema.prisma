generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model admin {
  id          String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  description String?  @db.VarChar(255)
  image       String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  event       event[]
}

model event {
  id           String         @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name         String         @db.VarChar(255)
  description  String?        @db.VarChar(255)
  admin_id     String?        @db.Uuid
  created_at   DateTime       @default(now()) @db.Timestamp(6)
  updated_at   DateTime       @default(now()) @db.Timestamp(6)
  admin        admin?         @relation(fields: [admin_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  registration registration[]
}

model participant {
  id           String         @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name         String         @db.VarChar(255)
  user_id      String?        @db.Uuid
  created_at   DateTime       @default(now()) @db.Timestamp(6)
  updated_at   DateTime       @default(now()) @db.Timestamp(6)
  user         user?          @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  registration registration[]
}

model registration {
  id             String       @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  status         String       @db.VarChar(255)
  event_id       String?      @db.Uuid
  participant_id String?      @db.Uuid
  created_at     DateTime     @default(now()) @db.Timestamp(6)
  updated_at     DateTime     @default(now()) @db.Timestamp(6)
  event          event?       @relation(fields: [event_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  participant    participant? @relation(fields: [participant_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String        @unique @db.VarChar(255)
  firstName   String?       @db.VarChar(255)
  lastName    String?       @db.VarChar(255)
  roq_user_id String        @db.VarChar(255)
  tenant_id   String        @db.VarChar(255)
  created_at  DateTime      @default(now()) @db.Timestamp(6)
  updated_at  DateTime      @default(now()) @db.Timestamp(6)
  admin       admin[]
  participant participant[]
}
